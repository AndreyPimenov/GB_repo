// HW5:
/*
1. Написать функцию которая выводит массив double чисел на экран. Параметры функции это сам массив и его размер. 
Вызвать эту функцию из main.

2. Задать целочисленный массив, состоящий из элементов 0 и 1. 
Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
Написать функцию, заменяющую в принятом массиве 0 на 1, 1 на 0. 
Выводить на экран массив до изменений и после.

3. Задать пустой целочисленный массив размером 8. 
Написать функцию, которая с помощью цикла заполнит его значениями 1 4 7 10 13 16 19 22. Вывести массив на экран.

4. * Написать функцию, которой на вход подаётся одномерный массив и число n (может быть положительным, или отрицательным), 
при этом метод должен циклически сместить все элементы массива на n позиций.

5. ** Написать функцию, которой передается не пустой одномерный целочисленный массив, она должна вернуть истину если в массиве есть место, 
в котором сумма левой и правой части массива равны. 
Примеры: 
checkBalance([1, 1, 1, || 2, 1]) → true, 
checkBalance ([2, 1, 1, 2, 1]) → false, 
checkBalance ([10, || 1, 2, 3, 4]) → true. 
Абстрактная граница показана символами ||, эти символы в массив не входят.

*/

void print_array_dir(double arr_fun [], const int ar_size_fun) {
    /* 
    Функция выводит массив double чисел на экран.
    Параметры функции это сам массив и его размер.
    */
    for (int i = 0; i <= ar_size_fun; i++){

        cout << arr_fun[i] << endl;
    }
}

void print_array_ptr (double* arr_ptr[], const int ar_size_ptr) {
    /*
    Функция принимает указатель на первый элемент массива.
    а также выводит остальные n-1 чисел
    */
    
}

int main() {

    // task1 A: direct array
    /*
    {
        const int test_ar_size = 10; 
        double test_array[test_ar_size] = { 12.0, 24.10, 14.0, 123.324, 43.5, 13.7, 45.98, 45.89 };

        print_array_dir(test_array, test_ar_size);

    }
    */

    // task1 B: pointer to the fist element of array
    // https://purecodecpp.com/archives/1188 - 
    // https://purecodecpp.com/archives/2286 - 
    {
        

    }


}
